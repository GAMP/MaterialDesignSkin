using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows.Data;
using System.ComponentModel;
using System.Windows;
using System.Windows.Markup;

namespace BindingExtensions
{
    public abstract class BindingBaseExtensionBase : MarkupExtension
    {
        #region Properties

        protected abstract BindingBase BindingBase
        {
            get;
        }

        [DefaultValue(null)]
        public object FallbackValue
        {
            get { return BindingBase.FallbackValue; }
            set { BindingBase.FallbackValue = value; }
        }

        [DefaultValue("")]
        public string BindingGroupName
        {
            get { return BindingBase.BindingGroupName; }
            set { BindingBase.BindingGroupName = value; }
        }

        [DefaultValue(null)]
        public string StringFormat
        {
            get { return BindingBase.StringFormat; }
            set { BindingBase.StringFormat = value; }
        }

        public object TargetNullValue
        {
            get { return BindingBase.TargetNullValue; }
            set { BindingBase.TargetNullValue = value; }
        }

        #endregion // Properties

        #region Public Methods

        public override object ProvideValue(IServiceProvider provider)
        {
            //create a binding and associate it with the target
            return BindingBase.ProvideValue(provider);
        }

        public abstract void SetBinding(DependencyObject targetObject, DependencyProperty targetProperty);

        #endregion // Public Methods
    }
}
